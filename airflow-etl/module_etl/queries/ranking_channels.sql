-- Insertar los datos en la tabla de staging

drop table if exists pda."2024_franco_santoliquido_schema".DAILY_CHANNEL_RANKING_STG ; 

create table pda."2024_franco_santoliquido_schema".DAILY_CHANNEL_RANKING_STG as (
WITH channel_metrics AS (
    SELECT 
        STG.YT_CHANNEL_ID,
        STG.YT_CHANNEL_NAME,
        CURRENT_DATE AS YT_DATE_ID, 
        SUM(STG.YT_VIEW_COUNT_7D) AS TOTAL_VIEW_COUNT_7D,
        SUM(STG.YT_LIKE_COUNT_7D) AS TOTAL_LIKE_COUNT_7D,
        SUM(STG.YT_COMMENT_COUNT_7D) AS TOTAL_COMMENT_COUNT_7D,
        COUNT(STG.YT_VIDEO_ID) AS TOTAL_VIDEOS
    FROM 
        pda."2024_franco_santoliquido_schema".BT_YOUTUBE_VIDEO_STATS STG
    WHERE
        STG.YT_DATE_PUBLISHED >= CURRENT_DATE - INTERVAL '7 DAY'
    GROUP BY 
        STG.YT_CHANNEL_ID, STG.YT_CHANNEL_NAME
),

channel_subscribers AS (
    SELECT
        SUBS.YT_CHANNEL_ID,
        cast(SUBS.YT_DATE_ID as DATE) AS YT_DATE_ID,
        SUBS.YT_SUSCRIBER_COUNT
    FROM
        pda."2024_franco_santoliquido_schema".LG_CHANNEL_SUBSCRIBERS SUBS
    WHERE
        SUBS.YT_DATE_ID = CURRENT_DATE
),

RANKING_DETAIL as (
    SELECT 
        CURRENT_DATE AS YT_DATE_ID,  
        CM.YT_CHANNEL_ID,
        CM.YT_CHANNEL_NAME,
        CM.TOTAL_VIEW_COUNT_7D,
        CM.TOTAL_LIKE_COUNT_7D,
        CM.TOTAL_COMMENT_COUNT_7D,
        CM.TOTAL_VIDEOS,
        COALESCE(CS.YT_SUSCRIBER_COUNT, 0) AS YT_SUBSCRIBER_COUNT,
        RANK() OVER (ORDER BY CM.TOTAL_VIEW_COUNT_7D DESC) AS RANK_BY_VIEWS,
        RANK() OVER (ORDER BY CM.TOTAL_LIKE_COUNT_7D DESC) AS RANK_BY_LIKES,
        RANK() OVER (ORDER BY CM.TOTAL_COMMENT_COUNT_7D DESC) AS RANK_BY_COMMENTS,
        RANK() OVER (ORDER BY COALESCE(CS.YT_SUSCRIBER_COUNT, 0) DESC) AS RANK_BY_SUBSCRIBERS,
        CURRENT_DATE,
        'ETL_YOUTUBE_CDE_PDA'
    FROM 
        channel_metrics CM
    LEFT JOIN 
        channel_subscribers CS 
    ON 
        CM.YT_CHANNEL_ID = CS.YT_CHANNEL_ID
)

SELECT 
    YT_DATE_ID,
    YT_CHANNEL_ID,
    YT_CHANNEL_NAME,
    TOTAL_VIEW_COUNT_7D,
    TOTAL_LIKE_COUNT_7D,
    TOTAL_COMMENT_COUNT_7D,
    TOTAL_VIDEOS,
    YT_SUBSCRIBER_COUNT,
    RANK_BY_VIEWS,
    RANK_BY_LIKES,
    RANK_BY_COMMENTS,
    RANK_BY_SUBSCRIBERS,
    RANK() OVER (PARTITION BY YT_DATE_ID ORDER BY ((RANK_BY_VIEWS + RANK_BY_LIKES + RANK_BY_COMMENTS + RANK_BY_SUBSCRIBERS) / 4.0) DESC) AS RANK_OF_THE_DAY
FROM 
    RANKING_DETAIL
);


-- Insertar nuevos registros en la tabla de ranking diario
INSERT INTO pda."2024_franco_santoliquido_schema".DAILY_CHANNEL_RANKING (
    YT_DATE_ID,
    YT_CHANNEL_ID,
    YT_CHANNEL_NAME,
    TOTAL_VIEW_COUNT_7D,
    TOTAL_LIKE_COUNT_7D,
    TOTAL_COMMENT_COUNT_7D,
    TOTAL_VIDEOS,
    YT_SUBSCRIBER_COUNT,
    RANK_BY_VIEWS,
    RANK_BY_LIKES,
    RANK_BY_COMMENTS,
    RANK_BY_SUBSCRIBERS,
    RANK_OF_THE_DAY,
    AUD_INS_DATE,
    AUD_UPD_ID,
    AUD_UPDATED_FROM
)
SELECT 
    STG.YT_DATE_ID,
    STG.YT_CHANNEL_ID,
    STG.YT_CHANNEL_NAME,
    STG.TOTAL_VIEW_COUNT_7D,
    STG.TOTAL_LIKE_COUNT_7D,
    STG.TOTAL_COMMENT_COUNT_7D,
    STG.TOTAL_VIDEOS,
    STG.YT_SUBSCRIBER_COUNT,
    STG.RANK_BY_VIEWS,
    STG.RANK_BY_LIKES,
    STG.RANK_BY_COMMENTS,
    STG.RANK_BY_SUBSCRIBERS,
    STG.RANK_OF_THE_DAY,
    CURRENT_DATE,   -- Fecha de inserción
    CURRENT_DATE,   -- Fecha de actualización
    'ETL_YOUTUBE_CDE_PDA'
FROM 
    pda."2024_franco_santoliquido_schema".DAILY_CHANNEL_RANKING_STG STG
LEFT JOIN 
    pda."2024_franco_santoliquido_schema".DAILY_CHANNEL_RANKING DW
ON 
    STG.YT_CHANNEL_ID = DW.YT_CHANNEL_ID
    AND STG.YT_DATE_ID = DW.YT_DATE_ID
WHERE 
    DW.YT_CHANNEL_ID IS NULL;